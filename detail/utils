#
# Module private

RED_TEXT='\e[0;31m'
YELLOW_TEXT='\e[0;33m'
NEUTRAL_TEXT='\e[0m'


has-terminal()
{
	tty -s
}


expand-dir-path()
{
	local path=$1

	local absolute_dir_path=$(cd $path; pwd)
	printf '%s\n' "$absolute_dir_path"
}


#
# Module public

# Output

printf-message()
{
	printf "$@"
	printf '\n'
}


printf-stderr()
{
	printf "$@" >&2
}


printf-vdev-message()
{
	printf 'virtual-dev: '
	printf "$@"
	printf '\n'
}


printf-vdev-warning()
{
	local script_name="vdev-$(basename $0)"

	if has-terminal
	then
		printf-stderr "$YELLOW_TEXT"'%s warning:'"$NEUTRAL_TEXT"' ' "$script_name"
	else
		printf-stderr '%s warning: ' "$script_name"
	fi

	printf-message "$@"
	printf-message '\n\n'
}


printf-vdev-error()
{
	local script_name="vdev-$(basename $0)"

	if has-terminal
	then
		printf-stderr "$RED_TEXT"'%s error:'"$NEUTRAL_TEXT"' ' "$script_name"
	else
		printf-stderr '%s error: ' "$script_name"
	fi

	printf-stderr "$@"
	printf-stderr '\n\n'
}


# Paths

expand-path()
{
	local path=$1

	local dir=$(dirname "$path")
	local base_name=$(basename "$path")
	local absolute_dir_path=$(expand-dir-path "$dir")
	printf '%s\n' "$absolute_dir_path/$base_name"
}


dos2unix-path()
{
	local dos_path=$1

	sed 's/\\/\//g' <<< $dos_path
}


escape-backslashes()
{
	local dos_path=$1

	sed 's/\\/\\\\/g' <<< $dos_path
}


# Stuff

trim-eoln()
{
	sed -e $'s/\r$//g'
}


unquote()
{
	local quoted=$1

	local unquoted=${quoted:1:${#quoted}-2}
	printf '%s\n' "$unquoted"
}


# Arrays

array-has-value()
{
	local value=$1
	local array=("${@:2}")

	local item
	for item in "${array[@]}"
	do
		if [ "$item" == "$value" ]
		then
			return
		fi
	done

	return 1
}


array-search-by-pattern()
{
	local pattern=$1
	local array=("${@:2}")

	local item
	for item in "${array[@]}"
	do
		if [[ $item =~ $pattern ]]
		then
			printf '%s\n' "$item"
			return
		fi
	done

	return 1
}

