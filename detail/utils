red_text='\e[0;31m'
no_color_text='\e[0m'


one_level_name()
{
	local script_directory=$(dirname $1)
	local script_parent_directory=$(basename "$script_directory")
	local script_base_name=$(basename $1)
	local script_name="$script_parent_directory/$script_base_name"

	printf '%s\n' "$script_name"
}


printf_message()
{
	printf "$@"
	printf '\n'
}


printf_stderr()
{
	printf "$@" >&2
}


printf_vdev_error()
{
	local script_name=$(one_level_name $0)
	printf_stderr "$red_text"'%s error:'"$no_color_text"' ' "$script_name"
	printf_stderr "$@"
	printf_stderr '\n\n'
}


conf_add()
{
	local file=$1
	local key=$2
	local value=$3

	printf '%s="%s"\n' "$key" "$value" >> "$file"
}


dos2unix_path()
{
	local dos_path=$1

	sed 's/\\/\//g' <<< $dos_path
}


trim_eoln()
{
	sed -e $'s/\r$//g'
}


escape_backslashes()
{
	local dos_path=$1

	sed 's/\\/\\\\/g' <<< $dos_path
}


unquote()
{
	local quoted=$1

	local unquoted=${quoted:1:${#quoted}-2}
	printf '%s\n' "$unquoted"
}


make_solution_cache_name()
{
	local path=$1

	sed 's/\//\./g' <<< "$path"
}


make_solution_cache_path()
{
	local solution_path=$1
	local out_dir=$2

	local solution_cache_dir=$(make_solution_cache_name "$solution_path")
	printf '%s\n' "$out_dir/$solution_cache_dir"
}


check_dir()
{
	local path=$1

	if [ -d "$path" ]
	then
		return
	fi

	mkdir -p "$path"
}

