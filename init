#!/bin/bash

export working_dir=$(pwd)
cd $(dirname $0)


source detail/utils


help_message=\
'Usage:
	./init [guest_name] [user] [password] [solution_paths...]
'


#
# Parameters & variables

if [ $# -lt 4 ]
then
	print_vdev_error 'wrong number of arguments\n%s\n' "$help_message"
	exit 1
fi

guest_name=$1
user=$2
password=$3


project_root="$working_dir"


#
# 'vm' configuration

# for future extensibility
VirtualBox=VBoxManage
vm="VirtualBox"
vm_manage=$(which "${!vm}")


vdevrc_dir="$project_root/vdevrc"
rm -rf "$vdevrc_dir"
mkdir "$vdevrc_dir"


vdevrc_vm="$vdevrc_dir/vm"

conf_add "$vdevrc_vm" 'vm' "$vm"
conf_add "$vdevrc_vm" 'vm_manage' "$vm_manage"
conf_add "$vdevrc_vm" 'guest_name' "$guest_name"
conf_add "$vdevrc_vm" 'user' "$user"
conf_add "$vdevrc_vm" 'password' "$password"


#
# Shared folder

project_name=$(basename "$project_root")

printf 'Creating working directory on \"%s\"...\n' "$guest_name"
try detail/"$vm"/sharedfolder "$project_name" "$project_root" 1> /dev/null
catch print_vdev_error "failed to create shared folder"

printf 'Waiting for \"%s\" to start...\n' "$guest_name"
try detail/"$vm"/startvm
catch print_vdev_error "failed to start \"$guest_name\""

printf 'Waiting for "net" to be available (requires \"%s\" to login)...\n' "$user"
output=$(try detail/finddisk "$project_root")
catch print_vdev_error "failed to find shared disk with project"

guest_shared_disk="$output"


printf 'Finishing initialization...\n'


#
# 'paths' configuration

cp -R guest "$vdevrc_dir/"

vdevrc_conf="$vdevrc_dir/conf"

conf_add "$vdevrc_conf" 'guest_root_dir' "$guest_shared_disk"
conf_add "$vdevrc_conf" 'guest_vdevrc_guest_dir' '$guest_root_dir/vdevrc/guest/'
conf_add "$vdevrc_conf" 'guest_vsprojprop_bat' '$guest_vdevrc_guest_dir/vsprojprop.bat'
conf_add "$vdevrc_conf" 'guest_build_bat' '$guest_vdevrc_guest_dir/build.bat'
conf_add "$vdevrc_conf" 'guest_run_bat' '$guest_vdevrc_guest_dir/run.bat'


for solution_path in ${@:4}
do
	if [ ! -f "$project_root/$solution_path" ]
	then
		print_vdev_error '"%s" does not exist' "$solution_path"
		exit 1
	fi

	solution_info_dir_name=$(sln_info_dir_name $solution_path)
	vdevrc_solution_info_dir="$vdevrc_dir/$solution_info_dir_name"
	mkdir "$vdevrc_solution_info_dir"

	vs_version=$(detail/vsversion "$project_root/$solution_path")
	printf '%s\n' "$vs_version" > "$vdevrc_solution_info_dir/vs_version"
done


printf 'Done.\n'

